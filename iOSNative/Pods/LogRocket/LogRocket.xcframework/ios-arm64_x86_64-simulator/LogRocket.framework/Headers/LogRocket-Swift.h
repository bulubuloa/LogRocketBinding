#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef LOGROCKET_SWIFT_H
#define LOGROCKET_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LogRocket",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class UIViewController;

SWIFT_PROTOCOL_NAMED("LifecycleDelegate")
@protocol LROLifecycleDelegate
- (void)viewControllerDidAppear:(UIViewController * _Nonnull)_;
- (void)viewControllerDidDisappear:(UIViewController * _Nonnull)_;
@end


SWIFT_CLASS_NAMED("ApplicationLifecycleObserver")
@interface LROApplicationLifecycleObserver : NSObject <LROLifecycleDelegate>
- (void)viewControllerDidAppear:(UIViewController * _Nonnull)viewController;
- (void)viewControllerDidDisappear:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;

SWIFT_CLASS_NAMED("CaptureMessageBuilder")
@interface LROCaptureMessageBuilder : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (LROCaptureMessageBuilder * _Nonnull)putTagString:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putTagBoolean:(NSString * _Nonnull)key value:(BOOL)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putTagDouble:(NSString * _Nonnull)key value:(double)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putTagInt:(NSString * _Nonnull)key value:(NSInteger)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putExtraString:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putExtraBoolean:(NSString * _Nonnull)key value:(BOOL)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putExtraDouble:(NSString * _Nonnull)key value:(double)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putExtraInt:(NSString * _Nonnull)key value:(NSInteger)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSMutableSet;
enum LROSanitizerType : NSInteger;
@protocol LRORequestSanitizer;
@protocol LROResponseSanitizer;
@class LROProxyConfigurationBuilder;

SWIFT_CLASS_NAMED("Configuration")
@interface LROConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nonnull serverURL;
@property (nonatomic, strong) NSMutableSet * _Nonnull allowTags;
@property (nonatomic, strong) NSMutableSet * _Nonnull redactionTags;
@property (nonatomic, strong) NSMutableSet * _Nonnull inputRedactionTags;
@property (nonatomic) enum LROSanitizerType textSanitizer;
@property (nonatomic) BOOL redactMenus;
@property (nonatomic) BOOL viewScanningEnabled;
@property (nonatomic) BOOL networkCaptureEnabled;
@property (nonatomic) BOOL logCaptureEnabled;
@property (nonatomic, strong) id <LRORequestSanitizer> _Nullable requestSanitizer;
@property (nonatomic, strong) id <LROResponseSanitizer> _Nullable responseSanitizer;
@property (nonatomic) BOOL registerTouchHandlers;
@property (nonatomic) CGFloat scaleFactor;
@property (nonatomic) BOOL ipCaptureEnabled;
@property (nonatomic) BOOL persistenceEnabled;
@property (nonatomic) uint32_t bufferTimeoutSeconds;
@property (nonatomic) NSInteger uploadIntervalMs;
@property (nonatomic, strong) LROProxyConfigurationBuilder * _Nonnull proxyConfiguration;
@property (nonatomic) BOOL experimentalBidiCapture;
- (nonnull instancetype)initWithAppID:(NSString * _Nonnull)appID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("CustomEvent")
@interface LROCustomEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("CustomEventBuilder")
@interface LROCustomEventBuilder : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (void)putRevenue:(double)value;
- (void)putString:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)putStringArray:(NSString * _Nonnull)key value:(NSArray<NSString *> * _Nonnull)value;
- (void)putDouble:(NSString * _Nonnull)key value:(double)value;
- (void)putDoubleArray:(NSString * _Nonnull)key value:(NSArray<NSNumber *> * _Nonnull)value;
- (void)putBool:(NSString * _Nonnull)key value:(BOOL)value;
- (void)putBoolArray:(NSString * _Nonnull)key value:(NSArray<NSNumber *> * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSCoder;

SWIFT_CLASS("_TtC9LogRocket14LRMarkerUIView")
@interface LRMarkerUIView : UIView
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS_NAMED("LogHandler")
@interface LROLogHandler : NSObject
+ (void)swift_load;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIScrollView;

SWIFT_CLASS_NAMED("LogRocketScrollTracker")
@interface LROScrollTracker : NSObject <UIScrollViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)view;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)view;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)view willDecelerate:(BOOL)decelerate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("Logger")
@interface LROLogger : NSObject
+ (void)debugWithMessage:(NSString * _Nonnull)message;
+ (void)infoWithMessage:(NSString * _Nonnull)message;
+ (void)errorWithMessage:(NSString * _Nonnull)message;
+ (void)warningWithMessage:(NSString * _Nonnull)message;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("ProxyConfigurationBuilder")
@interface LROProxyConfigurationBuilder : NSObject
- (void)proxyUsername:(NSString * _Nonnull)username;
- (void)proxyPassword:(NSString * _Nonnull)password;
- (void)httpEnable:(BOOL)enable;
- (void)httpProxy:(NSString * _Nonnull)proxy;
- (void)httpPort:(NSInteger)port;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSData;

SWIFT_CLASS_NAMED("Request")
@interface LRORequest : NSObject
@property (nonatomic, copy) NSString * _Nullable arsonBody;
@property (nonatomic, copy) NSData * _Nullable body;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
@property (nonatomic, readonly, copy) NSString * _Nonnull method;
@property (nonatomic, readonly) NSInteger reqID;
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LROResponseBuilder;

SWIFT_CLASS_NAMED("RequestBuilder")
@interface LRORequestBuilder : NSObject
@property (nonatomic, copy) NSString * _Nullable arsonBody;
@property (nonatomic, copy) NSData * _Nullable body;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull headers;
@property (nonatomic, copy) NSString * _Nullable method;
@property (nonatomic, readonly) NSInteger reqID;
@property (nonatomic, copy) NSString * _Nullable url;
- (LROResponseBuilder * _Nullable)capture SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("RequestSanitizer")
@protocol LRORequestSanitizer
- (LRORequest * _Nullable)sanitizeWithRequest:(LRORequest * _Nonnull)request SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("Response")
@interface LROResponse : NSObject
@property (nonatomic, copy) NSString * _Nullable arsonBody;
@property (nonatomic, copy) NSData * _Nullable body;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
@property (nonatomic, readonly, copy) NSString * _Nonnull method;
@property (nonatomic, readonly) NSInteger reqID;
@property (nonatomic, readonly) uint32_t status;
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ResponseBuilder")
@interface LROResponseBuilder : NSObject
@property (nonatomic, copy) NSString * _Nullable arsonBody;
@property (nonatomic, copy) NSData * _Nullable body;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull headers;
@property (nonatomic, copy) NSString * _Nonnull method;
@property (nonatomic, readonly) NSInteger reqID;
@property (nonatomic) NSInteger status;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic) double duration;
- (BOOL)capture SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("ResponseSanitizer")
@protocol LROResponseSanitizer
- (LROResponse * _Nullable)sanitizeWithResponse:(LROResponse * _Nonnull)response SWIFT_WARN_UNUSED_RESULT;
@end

@class NSNumber;
@class WKWebView;
@class NSURLRequest;

SWIFT_CLASS_NAMED("SDK")
@interface LROSDK : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (BOOL)initializeInternalWithConfiguration:(LROConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT;
+ (void)initializeWithConfiguration:(LROConfiguration * _Nonnull)configuration;
+ (void)addLogWithLevel:(NSString * _Nonnull)level args:(NSArray<NSString *> * _Nonnull)args;
+ (void)captureExceptionWithErrorMessage:(NSString * _Nonnull)errorMessage errorType:(NSString * _Nonnull)errorType exceptionType:(NSString * _Nonnull)exceptionType stackTrace:(NSString * _Nonnull)stackTrace;
+ (void)captureMessage:(LROCaptureMessageBuilder * _Nonnull)builder;
+ (void)captureReduxActionWithAction:(NSString * _Nonnull)action storeId:(NSNumber * _Nonnull)storeId duration:(NSNumber * _Nonnull)duration stateDelta:(NSString * _Nonnull)stateDelta count:(NSNumber * _Nonnull)count;
+ (void)captureReduxInitialStateWithState:(NSString * _Nonnull)state storeId:(NSNumber * _Nonnull)storeId;
+ (void)getSessionURL:(void (^ _Nonnull)(NSString * _Nonnull))completion;
+ (void)identifyWithUserID:(NSString * _Nonnull)userID userInfo:(NSDictionary<NSString *, NSString *> * _Nullable)userInfo;
+ (void)identifyAsAnonymousWithUserID:(NSString * _Nonnull)userID userInfo:(NSDictionary<NSString *, NSString *> * _Nullable)userInfo;
+ (LRORequestBuilder * _Nullable)newRequestBuilder SWIFT_WARN_UNUSED_RESULT;
+ (void)pauseViewCapture;
+ (void)endSession;
+ (void)shutdown;
+ (void)hardShutdown;
+ (void)track:(LROCustomEventBuilder * _Nonnull)builder;
+ (void)tagPage:(NSString * _Nonnull)relativePage;
+ (void)unpauseViewCapture;
+ (void)viewControllerDidAppear:(UIViewController * _Nonnull)controller;
+ (void)webViewInit:(WKWebView * _Nonnull)webView :(NSURLRequest * _Nonnull)request;
+ (void)webViewRemove:(WKWebView * _Nonnull)webView;
+ (void)viewControllerDidDisappear:(UIViewController * _Nonnull)controller;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, LROSanitizerType, "SanitizerType", open) {
  LROSanitizerTypeExcluded = 0,
  LROSanitizerTypeNone = 1,
};

@class UITouch;
@class UIEvent;
@class UIPress;
@class UIPressesEvent;

SWIFT_CLASS_NAMED("TouchShim")
@interface LROTouchShim : UIGestureRecognizer <UIGestureRecognizerDelegate>
- (BOOL)canBePreventedByGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canPreventGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)ignoreTouch:(UITouch * _Nonnull)_ forEvent:(UIEvent * _Nonnull)_;
- (void)ignorePress:(UIPress * _Nonnull)_ forEvent:(UIPressesEvent * _Nonnull)_;
- (BOOL)shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)_;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)_;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)_;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)_ shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithTarget:(id _Nullable)target action:(SEL _Nullable)action SWIFT_UNAVAILABLE;
@end


@class WKUserContentController;
@class WKScriptMessage;

SWIFT_CLASS("_TtC9LogRocket15WebViewObserver")
@interface WebViewObserver : NSObject <WKScriptMessageHandler>
- (void)userContentController:(WKUserContentController * _Nonnull)_ didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef LOGROCKET_SWIFT_H
#define LOGROCKET_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LogRocket",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class UIViewController;

SWIFT_PROTOCOL_NAMED("LifecycleDelegate")
@protocol LROLifecycleDelegate
- (void)viewControllerDidAppear:(UIViewController * _Nonnull)_;
- (void)viewControllerDidDisappear:(UIViewController * _Nonnull)_;
@end


SWIFT_CLASS_NAMED("ApplicationLifecycleObserver")
@interface LROApplicationLifecycleObserver : NSObject <LROLifecycleDelegate>
- (void)viewControllerDidAppear:(UIViewController * _Nonnull)viewController;
- (void)viewControllerDidDisappear:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;

SWIFT_CLASS_NAMED("CaptureMessageBuilder")
@interface LROCaptureMessageBuilder : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (LROCaptureMessageBuilder * _Nonnull)putTagString:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putTagBoolean:(NSString * _Nonnull)key value:(BOOL)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putTagDouble:(NSString * _Nonnull)key value:(double)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putTagInt:(NSString * _Nonnull)key value:(NSInteger)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putExtraString:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putExtraBoolean:(NSString * _Nonnull)key value:(BOOL)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putExtraDouble:(NSString * _Nonnull)key value:(double)value SWIFT_WARN_UNUSED_RESULT;
- (LROCaptureMessageBuilder * _Nonnull)putExtraInt:(NSString * _Nonnull)key value:(NSInteger)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSMutableSet;
enum LROSanitizerType : NSInteger;
@protocol LRORequestSanitizer;
@protocol LROResponseSanitizer;
@class LROProxyConfigurationBuilder;

SWIFT_CLASS_NAMED("Configuration")
@interface LROConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nonnull serverURL;
@property (nonatomic, strong) NSMutableSet * _Nonnull allowTags;
@property (nonatomic, strong) NSMutableSet * _Nonnull redactionTags;
@property (nonatomic, strong) NSMutableSet * _Nonnull inputRedactionTags;
@property (nonatomic) enum LROSanitizerType textSanitizer;
@property (nonatomic) BOOL redactMenus;
@property (nonatomic) BOOL viewScanningEnabled;
@property (nonatomic) BOOL networkCaptureEnabled;
@property (nonatomic) BOOL logCaptureEnabled;
@property (nonatomic, strong) id <LRORequestSanitizer> _Nullable requestSanitizer;
@property (nonatomic, strong) id <LROResponseSanitizer> _Nullable responseSanitizer;
@property (nonatomic) BOOL registerTouchHandlers;
@property (nonatomic) CGFloat scaleFactor;
@property (nonatomic) BOOL ipCaptureEnabled;
@property (nonatomic) BOOL persistenceEnabled;
@property (nonatomic) uint32_t bufferTimeoutSeconds;
@property (nonatomic) NSInteger uploadIntervalMs;
@property (nonatomic, strong) LROProxyConfigurationBuilder * _Nonnull proxyConfiguration;
@property (nonatomic) BOOL experimentalBidiCapture;
- (nonnull instancetype)initWithAppID:(NSString * _Nonnull)appID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("CustomEvent")
@interface LROCustomEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("CustomEventBuilder")
@interface LROCustomEventBuilder : NSObject
- (nonnull instancetype)init:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (void)putRevenue:(double)value;
- (void)putString:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)putStringArray:(NSString * _Nonnull)key value:(NSArray<NSString *> * _Nonnull)value;
- (void)putDouble:(NSString * _Nonnull)key value:(double)value;
- (void)putDoubleArray:(NSString * _Nonnull)key value:(NSArray<NSNumber *> * _Nonnull)value;
- (void)putBool:(NSString * _Nonnull)key value:(BOOL)value;
- (void)putBoolArray:(NSString * _Nonnull)key value:(NSArray<NSNumber *> * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSCoder;

SWIFT_CLASS("_TtC9LogRocket14LRMarkerUIView")
@interface LRMarkerUIView : UIView
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS_NAMED("LogHandler")
@interface LROLogHandler : NSObject
+ (void)swift_load;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIScrollView;

SWIFT_CLASS_NAMED("LogRocketScrollTracker")
@interface LROScrollTracker : NSObject <UIScrollViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)view;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)view;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)view willDecelerate:(BOOL)decelerate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("Logger")
@interface LROLogger : NSObject
+ (void)debugWithMessage:(NSString * _Nonnull)message;
+ (void)infoWithMessage:(NSString * _Nonnull)message;
+ (void)errorWithMessage:(NSString * _Nonnull)message;
+ (void)warningWithMessage:(NSString * _Nonnull)message;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("ProxyConfigurationBuilder")
@interface LROProxyConfigurationBuilder : NSObject
- (void)proxyUsername:(NSString * _Nonnull)username;
- (void)proxyPassword:(NSString * _Nonnull)password;
- (void)httpEnable:(BOOL)enable;
- (void)httpProxy:(NSString * _Nonnull)proxy;
- (void)httpPort:(NSInteger)port;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSData;

SWIFT_CLASS_NAMED("Request")
@interface LRORequest : NSObject
@property (nonatomic, copy) NSString * _Nullable arsonBody;
@property (nonatomic, copy) NSData * _Nullable body;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
@property (nonatomic, readonly, copy) NSString * _Nonnull method;
@property (nonatomic, readonly) NSInteger reqID;
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class LROResponseBuilder;

SWIFT_CLASS_NAMED("RequestBuilder")
@interface LRORequestBuilder : NSObject
@property (nonatomic, copy) NSString * _Nullable arsonBody;
@property (nonatomic, copy) NSData * _Nullable body;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull headers;
@property (nonatomic, copy) NSString * _Nullable method;
@property (nonatomic, readonly) NSInteger reqID;
@property (nonatomic, copy) NSString * _Nullable url;
- (LROResponseBuilder * _Nullable)capture SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("RequestSanitizer")
@protocol LRORequestSanitizer
- (LRORequest * _Nullable)sanitizeWithRequest:(LRORequest * _Nonnull)request SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("Response")
@interface LROResponse : NSObject
@property (nonatomic, copy) NSString * _Nullable arsonBody;
@property (nonatomic, copy) NSData * _Nullable body;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable headers;
@property (nonatomic, readonly, copy) NSString * _Nonnull method;
@property (nonatomic, readonly) NSInteger reqID;
@property (nonatomic, readonly) uint32_t status;
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ResponseBuilder")
@interface LROResponseBuilder : NSObject
@property (nonatomic, copy) NSString * _Nullable arsonBody;
@property (nonatomic, copy) NSData * _Nullable body;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull headers;
@property (nonatomic, copy) NSString * _Nonnull method;
@property (nonatomic, readonly) NSInteger reqID;
@property (nonatomic) NSInteger status;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic) double duration;
- (BOOL)capture SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("ResponseSanitizer")
@protocol LROResponseSanitizer
- (LROResponse * _Nullable)sanitizeWithResponse:(LROResponse * _Nonnull)response SWIFT_WARN_UNUSED_RESULT;
@end

@class NSNumber;
@class WKWebView;
@class NSURLRequest;

SWIFT_CLASS_NAMED("SDK")
@interface LROSDK : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (BOOL)initializeInternalWithConfiguration:(LROConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT;
+ (void)initializeWithConfiguration:(LROConfiguration * _Nonnull)configuration;
+ (void)addLogWithLevel:(NSString * _Nonnull)level args:(NSArray<NSString *> * _Nonnull)args;
+ (void)captureExceptionWithErrorMessage:(NSString * _Nonnull)errorMessage errorType:(NSString * _Nonnull)errorType exceptionType:(NSString * _Nonnull)exceptionType stackTrace:(NSString * _Nonnull)stackTrace;
+ (void)captureMessage:(LROCaptureMessageBuilder * _Nonnull)builder;
+ (void)captureReduxActionWithAction:(NSString * _Nonnull)action storeId:(NSNumber * _Nonnull)storeId duration:(NSNumber * _Nonnull)duration stateDelta:(NSString * _Nonnull)stateDelta count:(NSNumber * _Nonnull)count;
+ (void)captureReduxInitialStateWithState:(NSString * _Nonnull)state storeId:(NSNumber * _Nonnull)storeId;
+ (void)getSessionURL:(void (^ _Nonnull)(NSString * _Nonnull))completion;
+ (void)identifyWithUserID:(NSString * _Nonnull)userID userInfo:(NSDictionary<NSString *, NSString *> * _Nullable)userInfo;
+ (void)identifyAsAnonymousWithUserID:(NSString * _Nonnull)userID userInfo:(NSDictionary<NSString *, NSString *> * _Nullable)userInfo;
+ (LRORequestBuilder * _Nullable)newRequestBuilder SWIFT_WARN_UNUSED_RESULT;
+ (void)pauseViewCapture;
+ (void)endSession;
+ (void)shutdown;
+ (void)hardShutdown;
+ (void)track:(LROCustomEventBuilder * _Nonnull)builder;
+ (void)tagPage:(NSString * _Nonnull)relativePage;
+ (void)unpauseViewCapture;
+ (void)viewControllerDidAppear:(UIViewController * _Nonnull)controller;
+ (void)webViewInit:(WKWebView * _Nonnull)webView :(NSURLRequest * _Nonnull)request;
+ (void)webViewRemove:(WKWebView * _Nonnull)webView;
+ (void)viewControllerDidDisappear:(UIViewController * _Nonnull)controller;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, LROSanitizerType, "SanitizerType", open) {
  LROSanitizerTypeExcluded = 0,
  LROSanitizerTypeNone = 1,
};

@class UITouch;
@class UIEvent;
@class UIPress;
@class UIPressesEvent;

SWIFT_CLASS_NAMED("TouchShim")
@interface LROTouchShim : UIGestureRecognizer <UIGestureRecognizerDelegate>
- (BOOL)canBePreventedByGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canPreventGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)ignoreTouch:(UITouch * _Nonnull)_ forEvent:(UIEvent * _Nonnull)_;
- (void)ignorePress:(UIPress * _Nonnull)_ forEvent:(UIPressesEvent * _Nonnull)_;
- (BOOL)shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)_;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)_;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)_;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)_ shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithTarget:(id _Nullable)target action:(SEL _Nullable)action SWIFT_UNAVAILABLE;
@end


@class WKUserContentController;
@class WKScriptMessage;

SWIFT_CLASS("_TtC9LogRocket15WebViewObserver")
@interface WebViewObserver : NSObject <WKScriptMessageHandler>
- (void)userContentController:(WKUserContentController * _Nonnull)_ didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
